{"version":3,"file":"static/js/603.07bf253a.chunk.js","mappings":"0RACA,GAAgB,KAAO,wBAAwB,aAAe,gCAAgC,gBAAkB,mCAAmC,MAAQ,yBAAyB,iBAAmB,oCAAoC,SAAW,4BAA4B,OAAS,0BAA0B,SAAW,6B,SC+FhU,MAhFA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAoBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,GAAW,gBACfE,MAAM,iBACNC,SAAS,YACZC,SAAUJ,EAAAA,GAAW,kBAClBK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAOd,OACE,+BACE,SAAC,KAAD,CACEI,cAAe,CACbL,MAAO,GACPE,SAAU,IAEZI,gBAAc,EACdC,SAZc,SAAC,EAAD,GAAyC,IAAtCP,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAcM,EAAgB,EAAhBA,UAC1Cb,GAASc,EAAAA,EAAAA,IAAO,CAAET,MAAAA,EAAOE,SAAAA,EAAUM,UAAAA,IACpC,EAWKE,iBAAkBb,EAPpB,SASG,gBAAGc,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,QAASC,EAA9C,EAA8CA,MAA9C,OACC,UAAC,KAAD,CAAMC,UAAWC,EAAAA,KAAjB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,SAAC,IAAD,CAAMC,MAAO,GAAIC,OAAQ,GAAIH,UAAWC,EAAAA,QACxC,eAAID,UAAWC,EAAAA,UAAf,wBAGF,iBAAKD,UAAWC,EAAAA,gBAAhB,WACE,SAACG,EAAA,EAAD,CACEC,OAAO,SAAC,IAAD,CAAWH,MAAO,GAAIC,OAAQ,KACrCG,KAAK,QACLC,KAAK,QACLC,SAAUb,EACVc,OAAQb,EACRc,MAAOb,EAAOb,MACd2B,YAAY,SACZX,UAAWC,EAAAA,SAEb,SAACG,EAAA,EAAD,CACEC,OAAO,SAAC,IAAD,CAAUH,MAAO,GAAIC,OAAQ,KACpCG,KAAK,WACLC,KAAK,WACLC,SAAUb,EACVc,OAAQb,EACRc,MAAOb,EAAOX,SACdyB,YAAY,WACZX,UAAWC,EAAAA,YAIf,iBAAKD,UAAWC,EAAAA,iBAAhB,WACE,mBACED,UAAWC,EAAAA,SACXK,KAAK,SACLM,UAAWd,IAAYC,EAHzB,qBAQA,0BACE,SAAC,KAAD,CAAMc,GAAG,gBAAgBb,UAAWC,EAAAA,SAApC,6BAxCP,KAkDR,E,uCCvFc,SAASa,IACtB,OACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,IAAD,CACEC,QAAS,CACPC,OAAQ,uBAFZ,SAKG,SAAAC,GAAO,OACNA,EAAQD,QACN,SAAC,KAAD,CAAOE,IAAKC,EAAaC,IAAI,WAE7B,SAAC,KAAD,CAAOF,IAAKG,EAAWD,IAAI,SAJvB,KAQV,SAAC,EAAAE,EAAD,+BAGF,SAAC,KAAD,WACE,SAAC,EAAD,QAIP,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"logo_wrapper\":\"LoginForm_logo_wrapper__vJ8ZM\",\"container_input\":\"LoginForm_container_input__+HWnB\",\"input\":\"LoginForm_input__aQRtt\",\"button_container\":\"LoginForm_button_container__0rjB8\",\"logo_btn\":\"LoginForm_logo_btn__v53fS\",\"accent\":\"LoginForm_accent__IGdHn\",\"main_btn\":\"LoginForm_main_btn__QR7-4\"};","import { React } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { FormTextInput } from 'components/FormTextInput/FormTextInput';\n\nimport { ReactComponent as EmailIcon } from '../../icons/email.svg';\nimport { ReactComponent as LockIcon } from '../../icons/lock.svg';\nimport { ReactComponent as Logo } from '../../icons/wallet.svg';\n\nimport { signIn } from 'redux/authController/authController-operations';\nimport css from './LoginForm.module.css';\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n\n  const validationsSchema = Yup.object().shape({\n    email: Yup.string('Enter e-mail')\n      .email('Invalid email')\n      .required('Required'),\n    password: Yup.string('Enter password')\n      .min(6, 'Too Short!')\n      .max(14, 'Too Long!')\n      .required('Required'),\n  });\n\n  const handleLogin = ({ email, password }, { resetForm }) => {\n    dispatch(signIn({ email, password, resetForm }));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validateOnBlur\n        onSubmit={handleLogin}\n        validationSchema={validationsSchema}\n      >\n        {({ handleChange, handleBlur, values, isValid, dirty }) => (\n          <Form className={css.form}>\n            <div className={css.logo_wrapper}>\n              <Logo width={30} height={30} className={css.logo} />\n              <h1 className={css.logo_text}>Wallet</h1>\n            </div>\n\n            <div className={css.container_input}>\n              <FormTextInput\n                label={<EmailIcon width={20} height={16} />}\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                placeholder=\"E-mail\"\n                className={css.input}\n              />\n              <FormTextInput\n                label={<LockIcon width={16} height={21} />}\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                placeholder=\"Password\"\n                className={css.input}\n              />\n            </div>\n\n            <div className={css.button_container}>\n              <button\n                className={css.logo_btn}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                LOG IN\n              </button>\n\n              <div>\n                <Link to=\"/registration\" className={css.main_btn}>\n                  REGISTER\n                </Link>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from 'components/LoginForm';\nimport { ImageDiv, Wrapper, Image, P, FormWrapper } from './LoginPage.styled';\nimport frameDesc from '../../images/frame-login/frame-desctop.png';\nimport frameTablet from '../../images/frame-login/frame-tablet.png';\nimport Media from 'react-media';\n\nexport default function LoginPage() {\n  return (\n    <Wrapper>\n      <ImageDiv>\n        <Media\n          queries={{\n            tablet: '(max-width: 1279px)',\n          }}\n        >\n          {matches =>\n            matches.tablet ? (\n              <Image src={frameTablet} alt=\"frame\" />\n            ) : (\n              <Image src={frameDesc} alt=\"frame\" />\n            )\n          }\n        </Media>\n        <P> Finance App</P>\n      </ImageDiv>\n\n      <FormWrapper>\n        <LoginForm />\n      </FormWrapper>\n    </Wrapper>\n  );\n}\n"],"names":["dispatch","useDispatch","validationsSchema","Yup","shape","email","required","password","min","max","initialValues","validateOnBlur","onSubmit","resetForm","signIn","validationSchema","handleChange","handleBlur","values","isValid","dirty","className","css","width","height","FormTextInput","label","type","name","onChange","onBlur","value","placeholder","disabled","to","LoginPage","queries","tablet","matches","src","frameTablet","alt","frameDesc","P"],"sourceRoot":""}